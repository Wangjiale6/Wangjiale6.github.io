<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇博客</title>
    <url>/2024/03/25/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
  </entry>
  <entry>
    <title>HTML知识点</title>
    <url>/2024/03/29/HTML%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h3 id="HTML总结"><a href="#HTML总结" class="headerlink" title="HTML总结"></a>HTML总结</h3><p>基础认知<br>HTML(HTML (Hyper Text Markup Language）中文译为︰超文本标记语言。专门用于网页开发的语言，主要通过HTML标签对网页中的文本、图片、音频、视频等内容进行描述。</p>
<p>HTML骨架标签由html标签（网页的整体）、head标签（网页的头部）、body标签（网页的身体）、title标签（网页的标题）组成。</p>
<p>HTML注释：</p>
<p>HTML标签的结构：</p>
<p>标签由&lt;、&gt;、&#x2F;、英文单词或字母组成。并且把标签中&lt;&gt;包括起来的英文单词或字母称为标签名<br>常见标签由两部分组成，我们称之为:双标签。前部分叫开始标签，后部分叫结束标签，两部分之间包裹内容&lt; p &gt;&lt; p&#x2F; &gt;<br>少数标签由一部分组成，我们称之为:单标签。自成一体，无法包裹内容。&lt; br &gt;<br>HTML标签与标签之间的关系：</p>
<h3 id="1、父子关系-嵌套关系"><a href="#1、父子关系-嵌套关系" class="headerlink" title="1、父子关系(嵌套关系)"></a>1、父子关系(嵌套关系)</h3><h1>1级标题</h1>
<h2>2级标题</h2>
<h3>3级标题</h3>
<h4>4级标题</h4>
<h5>5级标题</h5>
<h6>6级标题</h6>



]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown语法知识点</title>
    <url>/2024/03/29/MarkDown%E8%AF%AD%E6%B3%95%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<h2 id="总览"><a href="#总览" class="headerlink" title="总览:"></a>总览:</h2><h5 id="Markdown是一种轻量级的标记语言，可用于将格式设置元素添加到纯文本文档中。Markdown-由John-Gruber于2004年创建，如今已成为世界上最受欢迎的标记语言之一。"><a href="#Markdown是一种轻量级的标记语言，可用于将格式设置元素添加到纯文本文档中。Markdown-由John-Gruber于2004年创建，如今已成为世界上最受欢迎的标记语言之一。" class="headerlink" title="   Markdown是一种轻量级的标记语言，可用于将格式设置元素添加到纯文本文档中。Markdown 由John Gruber于2004年创建，如今已成为世界上最受欢迎的标记语言之一。 "></a><font color="red">   Markdown是一种轻量级的标记语言，可用于将格式设置元素添加到纯文本文档中。Markdown 由John Gruber于2004年创建，如今已成为世界上最受欢迎的标记语言之一。 </font></h5><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h3 id="1-使用-号创建标题"><a href="#1-使用-号创建标题" class="headerlink" title="1. 使用#号创建标题"></a>1. 使用#号创建标题</h3><p>使用 # 创建标题可以支持6级标题。你需要几级标题就输入几个 # 号，然后再输入一个空格后，即可生成所需要的标题。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 1级标题</span></span><br><span class="line"><span class="section">## 2级标题</span></span><br><span class="line"><span class="section">### 3级标题</span></span><br><span class="line"><span class="section">#### 4级标题</span></span><br><span class="line"><span class="section">##### 5级标题</span></span><br><span class="line"><span class="section">###### 6级标题</span></span><br></pre></td></tr></table></figure>

<h3 id="2-使用-和-号创建标题"><a href="#2-使用-和-号创建标题" class="headerlink" title="2. 使用&#x3D;和-号创建标题"></a>2. 使用&#x3D;和-号创建标题</h3><p>使用 &#x3D; 可以创建一级标题，使用-可以创建二级标题。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">一级标题 ======== </span><br><span class="line">二级标题 --------</span><br></pre></td></tr></table></figure>

<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p>段落直接输入文字就行了，切记行首不要带有空格Space 或制表符 Tab。</p>
<h3 id="1-换行"><a href="#1-换行" class="headerlink" title="1. 换行"></a>1. 换行</h3><p>输入两个或两个以上空格结束一行，然后键入回车键 Enter.</p>
<h3 id="2-字体格式"><a href="#2-字体格式" class="headerlink" title="2. 字体格式"></a>2. 字体格式</h3><figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜体字 &gt;&gt;就是在字的前后各添加一个星号*</span>  </span><br><span class="line"><span class="emphasis">_斜体字 &gt;&gt;也可以在字的前后各添加一个下划线_</span>  </span><br><span class="line"><span class="strong">**粗体字 &gt;&gt;就是在字的前后各添加两个星号**</span>  </span><br><span class="line"><span class="strong">__粗体字 &gt;&gt;也可以在字的前后各添加两个下划线__</span>  </span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体字 &gt;&gt;就是在字的前后各添加三个星号*</span>**</span>  </span><br><span class="line"><span class="strong">__<span class="emphasis">_粗斜体字 &gt;&gt;也可以在字的前后各添加三个下划线_</span>__</span>  </span><br></pre></td></tr></table></figure>

<h3 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3. 删除线"></a>3. 删除线</h3><p>可以通过在段落的字体上放置一条横线来表示“删除”，表示这是错误的或不存在。要实现该功能只需要在文字的两端添加两个波浪线 ~~ 即可。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">~~世界是平坦的。~~ 我们现在知道世界是圆的。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="4-脚注"><a href="#4-脚注" class="headerlink" title="4. 脚注"></a>4. 脚注</h3><p>脚注使您可以添加注释和参考，而不会使文档正文混乱。创建脚注时，带有脚注引用的链接将出现带有链接的上标编号。读者可以单击链接跳至页面底部的脚注内容。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">这是测试脚注[^标识符]。</span><br><span class="line"></span><br><span class="line">这是数字脚注[^1]。这是文字脚注[^文本脚注]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^标识符</span>]:<span class="link">标识符可以是数字或文本。但不能包含空格或制表符。  </span></span><br><span class="line">[<span class="symbol">^1</span>]:<span class="link">数字脚注测试说明。  </span></span><br><span class="line">[<span class="symbol">^文本脚注</span>]:<span class="link">文本脚注测试说明。</span></span><br></pre></td></tr></table></figure>

<h3 id="5-下划线"><a href="#5-下划线" class="headerlink" title="5. 下划线"></a>5. 下划线</h3><p>Markdown本身并没有该语法，因为会和超链接样式混淆。所以如非不要请不要添加。<br>但可以使用html标签来实现（u指的是underline下划线）。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>需要添加下划线的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="6-首行缩进"><a href="#6-首行缩进" class="headerlink" title="6. 首行缩进"></a>6. 首行缩进</h3><p>Markdown本身并没有该语法，但可以使用下面的语法（两个&amp;emsp；）替代传统的两个字符缩进。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;emsp;&amp;emsp;Markdown本身并没有该语法，这只是一种非常简单的替代方法；当然Markdown语法支持html语句，可以直接用html标签来实现，请自行搜索学习。</span><br></pre></td></tr></table></figure>

<h3 id="7-字体颜色、大小、字体类型"><a href="#7-字体颜色、大小、字体类型" class="headerlink" title="7. 字体颜色、大小、字体类型"></a>7. 字体颜色、大小、字体类型</h3><p><strong>Markdown</strong>本身并没有该语法，<font color="red">但<strong>Markdown</strong>支持<strong>HTML</strong>的语法。</font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;font color=&quot;&quot; size=4 face=&quot;&quot;&gt;字体颜色、大小、字体类型&lt;/font&gt;  </span><br><span class="line">&lt;font color=&quot;blue&quot; size=3 face=&quot;楷体&quot;&gt;这是蓝色3号楷体子&lt;/font&gt;  </span><br><span class="line">&lt;font color=&quot;red&quot;&gt;这是红色字体，可单独配置一项&lt;/font&gt;  </span><br><span class="line">&lt;font size=4&gt;这是4号字体，可单独配置一项&lt;/font&gt;  </span><br></pre></td></tr></table></figure>

<h3 id="8-文本高亮"><a href="#8-文本高亮" class="headerlink" title="8. 文本高亮"></a>8. 文本高亮</h3><p><strong>Markdown</strong>本身并没有该语法，但<strong>Markdown</strong>支持<strong>HTML</strong>的语法。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不需要高亮，&lt;mark&gt;重点提示需要高亮显示&lt;/mark&gt;，\&lt;mark&gt; 是HTML5的新标签。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="块引用"><a href="#块引用" class="headerlink" title="块引用"></a>块引用</h2><p>在段落的开头添加一个 &gt; , 然后再键入一个空格。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; 块引用  </span><br><span class="line">&gt; blockquote  </span><br></pre></td></tr></table></figure>

<h3 id="1-嵌套块引用"><a href="#1-嵌套块引用" class="headerlink" title="1. 嵌套块引用"></a>1. 嵌套块引用</h3><p>区块可以嵌套，在需要的段落前面再添加一个 &gt;。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 嵌套主体  </span></span><br><span class="line">&gt;&gt; 第一层嵌套  </span><br><span class="line">&gt;&gt;&gt; 第二层嵌套 </span><br></pre></td></tr></table></figure>

<h3 id="2-具有其他元素的块引用"><a href="#2-具有其他元素的块引用" class="headerlink" title="2. 具有其他元素的块引用"></a>2. 具有其他元素的块引用</h3><p>块引用可以包含其他Markdown格式的元素。并非所有元素都可以使用-您需要进行实验以查看哪些元素有效。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; ### 在块引用中添加标题 </span><br><span class="line">&gt; 1. 在块引用添加项目编号</span><br><span class="line">&gt; 2. 在块引用添加项目编号  </span><br><span class="line">&gt; + 在块引用添加项目符号 </span><br><span class="line">&gt; - 在块引用添加项目符号 </span><br><span class="line">&gt; * 在块引用添加项目符号 </span><br><span class="line">&gt; - **粗体文本** 和 *斜体文本*</span><br></pre></td></tr></table></figure>

<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>支持有序列表和无序列表。</p>
<h3 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="1. 有序列表"></a>1. 有序列表</h3><p>只需要在前面添加添加数字和. ，然后键入空格Space。数字不必按数字顺序排列，但列表应以数字开头。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br><span class="line">4. 第四项</span><br><span class="line">5. 第五项</span><br><span class="line">6. 第六项</span><br><span class="line">   1. 缩进项（键入4个空格或制表符）</span><br><span class="line">   2. 缩进项（键入4个空格或制表符） </span><br></pre></td></tr></table></figure>

<h3 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="2. 无序列表"></a>2. 无序列表</h3><p>请在订单项前添加减号 -，星号 * 或加号 +。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">* 第三项</span><br><span class="line">* 第四项</span><br><span class="line">+ 第五项</span><br><span class="line">+ 第六项</span><br><span class="line">    + 缩进项（键入4个空格或制表符）</span><br><span class="line">    - 缩进项（键入4个空格或制表符） </span><br></pre></td></tr></table></figure>

<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>要将段落中的函数或其他表达式表示为代码，请将其括在勾号 &#96; 中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`main()`函数中调用`printf()`函数</span><br></pre></td></tr></table></figure>

<h3 id="1-代码块"><a href="#1-代码块" class="headerlink" title="1. 代码块"></a>1. 代码块</h3><p>要创建代码块，请在代码块的每一行缩进至少四个空格 Space 或一个制表符 Tab 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for(i=0; i&lt;8; i++) &#123;</span><br><span class="line">    printf(&quot;这是代码块测试代码&quot;);</span><br><span class="line">    delay_ms(1000);                 /* 延时1s */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-围栏代码块"><a href="#2-围栏代码块" class="headerlink" title="2. 围栏代码块"></a>2. 围栏代码块</h3><p>根据Markdown处理器或编辑器的不同，您将在代码块之前和之后的行上使用三个刻度线 &#96;&#96;&#96; 或三个波浪号~~~ ；如果需要高亮显示，请指定对应的语言，诸如C、C++、JAVA、Python等等。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line">for(i=0; i&lt;8; i++) &#123;</span><br><span class="line">    printf(&quot;这是代码块测试代码&quot;);</span><br><span class="line">    delay_ms(1000);                 /* 延时1s */</span><br><span class="line">&#125;</span><br><span class="line">```</span><br><span class="line">```c++</span><br><span class="line">for(i=0; i&lt;8; i++) &#123;</span><br><span class="line">    printf(&quot;这是代码块测试代码&quot;);</span><br><span class="line">    delay_ms(1000);                 /* 延时1s */</span><br><span class="line">&#125;</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><font color="red">创建链接时。首先再方括号中填写链接文本（例如[链接名称]），然后再紧跟方括号的括号（例如(<a href="https://www.google.com))中填写链接地址url./">https://www.google.com)）中填写链接地址URL。</a></font></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我常用的搜索引擎是[百度](https://www.google.com)</span><br></pre></td></tr></table></figure>

<h3 id="1-为链接添加标题"><a href="#1-为链接添加标题" class="headerlink" title="1. 为链接添加标题"></a>1. 为链接添加标题</h3><p>您可以选择为链接添加标题。当用户将鼠标悬停在链接上时，这将显示为工具提示。要添加标题，直接在URL后面键入空格 Space 后添加标题。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我常用的搜索引擎是[谷歌](https://www.google.com&quot;搜索引擎&quot;)。</span><br></pre></td></tr></table></figure>

<h3 id="2-网址和电子邮件地址"><a href="#2-网址和电子邮件地址" class="headerlink" title="2. 网址和电子邮件地址"></a>2. 网址和电子邮件地址</h3><p>要将URL或电子邮件地址快速转换为链接，请将其括在尖括号中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;https://markdown.p2hp.com&gt;</span><br><span class="line">&lt;xxxx@email.com&gt;</span><br></pre></td></tr></table></figure>

<h3 id="3-格式化链接"><a href="#3-格式化链接" class="headerlink" title="3. 格式化链接"></a>3. 格式化链接</h3><p>为了强调链接，请在方括号和括号之前和之后添加星号。<br><strong>其实就是相当于段落中字体格式的设置。</strong></p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>要添加图像，请在链接的前面添加感叹号（!），然后在括号中添加替代文本，并在括号中添加图像资源的路径或URL。您可以选择在括号中的URL之后添加标题。</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>要添加表格，请使用三个或多个连字符 — 创建每列的标题，并使用竖线 | 分隔每列。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 标题 | 标题 |</span><br><span class="line">| --- | -------------- |</span><br><span class="line">| 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 |</span><br></pre></td></tr></table></figure>

<h3 id="1-使用图形界面创建表格"><a href="#1-使用图形界面创建表格" class="headerlink" title="1. 使用图形界面创建表格"></a>1. 使用图形界面创建表格</h3><p>使用字符创建表格很费事、很麻烦，为了加快这一过程,我们可以使用在线表格生成器<a href="https://www.tablesgenerator.com/markdown_tables">Markdown Tables Generator</a>。</p>
<h3 id="2-对齐方式"><a href="#2-对齐方式" class="headerlink" title="2. 对齐方式"></a>2. 对齐方式</h3><p>要实现类似Excel文本的左对齐、居中、右对齐，只需要在连字符的左侧、两侧、右侧添加冒号 : 即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">| 物料编号 | 物料名称 | 物料封装 |</span><br><span class="line">| :--- | :------: |----:|</span><br><span class="line">| 1 | PCB板 | Main Board |</span><br><span class="line">| 2 | SPC5634MF2MLQ80 | LQFP144 |</span><br></pre></td></tr></table></figure>

<h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>Markdown使用很多字符表示特定的意思，要显示原义字符，请在字符的前面添加反斜杠 \ ,这样就可以转义字符了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#### 没有使用反斜杠，这是4级标题</span><br><span class="line">\#### 使用反斜杠，这就是4个#号</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue文档风格的Typora主题</title>
    <url>/2024/03/30/Vue%E6%96%87%E6%A1%A3%E9%A3%8E%E6%A0%BC%E7%9A%84Typora%E4%B8%BB%E9%A2%98/</url>
    <content><![CDATA[<p><a href="https://github.com/blinkfox/typora-vue-theme">typora-vue-theme</a> 是 Typora Markdown 文档编辑器中一款类似<a href="https://vuejs.org/">Vue</a>文档风格的主题。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://www.typora.io/">Typora</a>是一款支持实时预览的 Markdown 编辑器和阅读器，支持<code>Windows</code>、<code>macOS</code>、<code>Linux</code>三大平台。Typora 作为一款合格的 Markdown 编辑器，支持图片、列表、表格、代码、公式、目录等功能，同时这款软件还支持（一键）动态预览功能，让一切都变得如此干净、纯粹。并且有多种主题模板。**<a href="https://github.com/blinkfox/typora-vue-theme">typora-vue-theme</a>就是参考了<a href="https://vuejs.org/">Vue</a>文档风格而开发的一个 Typora 自定义主题**。</p>
<p><font color="green">用起来还挺不错的</font>&gt;</p>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>Vue</tag>
        <tag>Typora</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS知识点</title>
    <url>/2024/03/30/CSS%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    <content><![CDATA[<ul>
<li><h2 id="CSS3边框"><a href="#CSS3边框" class="headerlink" title="CSS3边框"></a>CSS3边框</h2></li>
</ul>
<p>边框属性：</p>
<p><code>border-radius</code>：创建圆角边框</p>
<p><code>box-Shadow</code>：附加一个或者多个下拉框的阴影</p>
<p><code>border-image</code>（不支持IE）：使用图像创建一个边框</p>
<h3 id="CSS3圆角"><a href="#CSS3圆角" class="headerlink" title="CSS3圆角"></a>CSS3圆角</h3><p>可以使用CSS3 圆角制作器来制作一个css3圆角，可以直接生成代码。</p>
<p>指定border-radius的每个圆角：</p>
<p>如果只指定一个值，则生成四个圆角；若在每个角上指定，则使用如下规则：</p>
<p>四个值：四个值分别指定左上角、右上角、右下角、左下角。</p>
<p>三个值：第一个值为左上角，第二个值为右上角和左下角，第三个值为右下角。</p>
<p>两个值：第一个值为左上角和右下角，第二个值为右上角和左下角。</p>
<p>一个值：四个圆角值相同。</p>
<h2 id="创建椭圆边角："><a href="#创建椭圆边角：" class="headerlink" title="创建椭圆边角："></a>创建椭圆边角：</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-radius</span>： <span class="number">50px</span>/<span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br></pre></td></tr></table></figure>

<h3 id="圆角属性："><a href="#圆角属性：" class="headerlink" title="圆角属性："></a>圆角属性：</h3><table>
<thead>
<tr>
<th align="left">代码</th>
<th align="center">控制内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">border-radius</td>
<td align="center">所有四个边角属性的缩写</td>
</tr>
<tr>
<td align="left">border-top-left-radius</td>
<td align="center">左上角的弧度</td>
</tr>
<tr>
<td align="left">border-top-right-radius</td>
<td align="center">右上角的弧度</td>
</tr>
<tr>
<td align="left">border-bottom-left-radius</td>
<td align="center">左下角的弧度</td>
</tr>
<tr>
<td align="left">border-bottom-right-radius</td>
<td align="center">右下角的弧度</td>
</tr>
</tbody></table>
<h3 id="CSS3背景"><a href="#CSS3背景" class="headerlink" title="CSS3背景"></a>CSS3背景</h3><p>四种背景属性：</p>
<p><code>background-image</code>：添加背景图片。不同的背景图像和图像用逗号隔开。</p>
<p><code>background-size</code>：指定背景图像的大小，可指定像素或者百分比的大小，是相对于父元素的宽度和高度的百分比的大小。</p>
<p><code>background-origin</code>：指定了背景图像的位置区域</p>
<ul>
<li><h2 id="CSS3渐变"><a href="#CSS3渐变" class="headerlink" title="CSS3渐变"></a>CSS3渐变</h2></li>
</ul>
<p>渐变可以让我们在两个或者多个颜色之间显示平稳的过渡。</p>
<p>两种类型的渐变：</p>
<p><code>Linear</code> <code>Gradients</code>：线性渐变-向下&#x2F;向上&#x2F;向左&#x2F;向右&#x2F;对角方向</p>
<p><code>Radial</code> <code>Gradients</code>：径向渐变，由它们的中心定义</p>
<p><strong>线性渐变</strong>：</p>
<h3 id="语法："><a href="#语法：" class="headerlink" title="语法："></a>语法：</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">background</span>：linear-gradient(<span class="attribute">direction</span>, <span class="attribute">color</span>-stop1, <span class="attribute">color</span>-stop2, …);</span><br></pre></td></tr></table></figure>

<p>线性渐变默认情况是从上到下。</p>
<p>从左到右的线性渐变：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">grad &#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left, red, blue);</span><br><span class="line"></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">-o-liner-gradient</span>(right, red, blue);</span><br><span class="line"></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(right, red, blue);</span><br><span class="line"></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, red, blue);<span class="comment">/*标准语法*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>从左上角开始到右下角的渐变：</p>
<p>设置方向为：left top&#x2F;bottom right&#x2F;to bottom right(标准语法下)</p>
<p>使用角度对方向进行设置：</p>
<p>这里的角度是指水平线和渐变线之间的角度。So 0deg将创建一个从下到上的渐变，90deg将创建一个从左到右的渐变。</p>
<p>使用透明度：</p>
<p>支持透明度，用于创建减弱变淡的效果。</p>
<p>为了添加透明度，使用rgba()函数来定义颜色结点。rgba()函数中的最后一个参数可以是从0到1的值，它定义了颜色的透明度：0表示完全透明，1表示完全不透明。</p>
<h3 id="重复的线性渐变："><a href="#重复的线性渐变：" class="headerlink" title="重复的线性渐变："></a>重复的线性渐变：</h3><p><code>repeating-linear-gradient()</code>函数用于重复的线性渐变。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">repeating-linear-gradient()  </span><br></pre></td></tr></table></figure>

<h3 id="径向渐变-："><a href="#径向渐变-：" class="headerlink" title="径向渐变 ："></a>径向渐变 ：</h3><p>我们可以指定渐变的中心、形状（圆形或者椭圆形）、大小，默认情况下，渐变的中心是center（表示在中心点），渐变的形状是ellipse（表示椭圆形），渐变的大小是farthest-corner（表示到最远的角落）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">background: radial-gradient(center, shape size, start-color, …, last-color);</span><br></pre></td></tr></table></figure>

<h3 id="颜色结点分布不均匀的径向渐变："><a href="#颜色结点分布不均匀的径向渐变：" class="headerlink" title="颜色结点分布不均匀的径向渐变："></a>颜色结点分布不均匀的径向渐变：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grad&#123;</span><br><span class="line"></span><br><span class="line">background: -webkit-radial-gradient(red 5%, green 15%, blue 60%);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>Size参数</code>定义了渐变的大小，可以是以下四个值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">closest-side/farthest-side/closest-corner/farthest-corner</span><br></pre></td></tr></table></figure>

<h3 id="重复的径向渐变："><a href="#重复的径向渐变：" class="headerlink" title="重复的径向渐变："></a>重复的径向渐变：</h3><p><code>Reperting-radial-gradient()</code>函数用于重复径向渐变。</p>
<h3 id="CSS3文本效果"><a href="#CSS3文本效果" class="headerlink" title="## CSS3文本效果"></a>## CSS3文本效果</h3><h4 id="包含属性："><a href="#包含属性：" class="headerlink" title="包含属性："></a>包含属性：</h4><p><code>text-shadow</code>：适用于文本阴影，可以指定是水平阴影还是垂直阴影、模糊的距离以及阴影的颜色。</p>
<p><code>box-shadow</code>：适用于盒子阴影。同上。可以在::after和::before两个伪元素中添加阴影效果。</p>
<p><code>text-overflow</code>：文本溢出属性指定应向用户如何显示溢出内容**</p>
<p>有两个属性：ellipsis（以省略号的形式隐藏内容）和clip（直接截断内容）</p>
<p><code>word-wrap</code>：强制换行，但是单词中间不换行</p>
<p><code>word-break</code>：单词可进行拆分然后换行</p>
<ul>
<li><h2 id="CSS3字体"><a href="#CSS3字体" class="headerlink" title="CSS3字体"></a>CSS3字体</h2></li>
</ul>
<p><code>@font-face规则</code>，若使用，首先定义字体的名称，然后指向该文字字体。</p>
<p>通过<code>font-family</code>属性来引用字体的名称。</p>
<table>
<thead>
<tr>
<th>描述符</th>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>font-family</td>
<td>name</td>
<td>必需，规定字体的名称。</td>
</tr>
<tr>
<td>src</td>
<td>URL</td>
<td></td>
</tr>
<tr>
<td>font-strench</td>
<td>normal<br/><br/>condensed<br/><br/>ultra-condensed<br/><br/>extra-condensed<br/><br/>semi-condensed<br/><br/>expanded<br/><br/>semi-expanded<br/><br/>extra-expanded<br/><br/>ultra-expanded</td>
<td>可选，定义如何拉伸字体，默认值是nomal</td>
</tr>
<tr>
<td>font-style</td>
<td>nomal<br/><br/>Italic<br/><br/>oblique</td>
<td>可选，定义字体的样式</td>
</tr>
<tr>
<td>font-weight</td>
<td>nomal<br/><br/>bold<br/><br/>100<br/><br/>200<br/><br/>……<br/><br/>900</td>
<td>可选，定义字体的粗细</td>
</tr>
<tr>
<td>unicode-range</td>
<td>unicode-range</td>
<td>可选，定义字体支持的UNICODE字符范围</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ul>
<li><h3 id="CSS3-2D转换"><a href="#CSS3-2D转换" class="headerlink" title="CSS3 2D转换"></a>CSS3 2D转换</h3></li>
</ul>
<p>2D变换方法：</p>
<p><code>translate()</code>：平移</p>
<p><code>rotate()</code>：在一个给定度数顺时针旋转的元素</p>
<p><code>scale()</code></p>
<p><code>skew()</code></p>
<p><code>matrix()</code></p>
<h3 id="CSS3过渡"><a href="#CSS3过渡" class="headerlink" title="CSS3过渡"></a>CSS3过渡</h3><p>为了添加某种效果可以从一个样式转变到另一个的时候，无需使用flash动画或JavaScript，只需要鼠标移动到上面就可以。</p>
<p>我们要实现这样的效果，必须规定两项内容：</p>
<p>指定要添加效果的CSS属性和效果的持续时间</p>
<p>所有的过渡属性：</p>
<p>transition：简写属性，用于在一个属性中设置四个过渡属性</p>
<p>transition-property：规定应用过渡的CSS属性的名称</p>
<p>transition-duration：定义过渡效果花费的时间，默认是0</p>
<p>transition-timing-function：规定过渡效果的时间曲线，默认是‘ease‘</p>
<p>transition-delay：规定过渡时间何时开始，默认是0</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line"></span><br><span class="line">transition-property: width;</span><br><span class="line"></span><br><span class="line">transition-duration: 1s;</span><br><span class="line"></span><br><span class="line">transition-timing-function: linear;</span><br><span class="line"></span><br><span class="line">transition-delay: 2s;</span><br><span class="line"></span><br><span class="line">&#125;//等价于div&#123; transition: width 1s linear 2s; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><h2 id="CSS3动画"><a href="#CSS3动画" class="headerlink" title="CSS3动画"></a>CSS3动画</h2></li>
</ul>
<h3 id="创建动画，可以取代许多网页动画图像，Flash动画和JavaScript"><a href="#创建动画，可以取代许多网页动画图像，Flash动画和JavaScript" class="headerlink" title="创建动画，可以取代许多网页动画图像，Flash动画和JavaScript"></a>创建动画，可以取代许多网页动画图像，Flash动画和JavaScript</h3><p> CSS3<code>@keyframes</code>规则</p>
<p>该规则是创建动画。@keyframes规则内指定一个CSS样式和动画将逐步从目前的样式更改为新的样式。</p>
<p>当@keyframes创建动画时，把它绑定到一个选择器，否则不会有任何效果。</p>
<p>指定至少两个CSS3的动画属性绑定向一个选择器：规定动画的名称和动画的时长。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div &#123;</span><br><span class="line"></span><br><span class="line">width: 100px;</span><br><span class="line"></span><br><span class="line">height: 100px;</span><br><span class="line"></span><br><span class="line">background: red;</span><br><span class="line"></span><br><span class="line">animation: myfirst 5s;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@keyframes myfirst &#123;</span><br><span class="line"></span><br><span class="line">from &#123; background: red;&#125;</span><br><span class="line"></span><br><span class="line">to &#123; backgroung: yellow;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们可以改变任意多的样式任意多的次数。请用百分比来规定变化发生的时间，或用关键词<code>from</code>和<code>to</code>，等同于<code>0%</code>和<code>100%</code>。 0%是动画的开始，100%是动画的完成 。</p>
<h3 id="CSS3多列"><a href="#CSS3多列" class="headerlink" title="CSS3多列"></a>CSS3多列</h3><p>多列属性：</p>
<p>column-count：指定元素的列数应分为几列。</p>
<p>div {</p>
<p>-moz-column-count:3;&#x2F;<em>Firefox</em>&#x2F;</p>
<p>}</p>
<p>column-gap：指定的列之间的差距</p>
<p>column-rule：设置列之间的宽度、样式和颜色</p>
<p>column-rule-color：指定的列之间颜色规则</p>
<p>column-rule-style：指定的列之间的样式规则</p>
<p>column-rule-width：指定的列之间的宽度规则</p>
<p>column-width：指定列的宽度</p>
<p>column-span：指定一个元素应该横跨多少列</p>
<p>columns：缩写属性设置列宽和列数</p>
<p>column-fill：指定如何填充列</p>
<h3 id="CSS-3用户界面"><a href="#CSS-3用户界面" class="headerlink" title="CSS 3用户界面"></a>CSS 3用户界面</h3><p>新增加了一些新的用户界面特性来调整元素尺寸、框尺寸和外边框。</p>
<p>用户界面属性：</p>
<p>resize：指定一个元素是否应该由用户去调整大小</p>
<p>box-sizing：允许以确切的方式定义适应某个区域的具体内容</p>
<p>outline-offset：对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。轮廓与边框不同，轮廓不占用空间，而且可能是非矩形。</p>
<ul>
<li><h2 id="CSS3盒子模型"><a href="#CSS3盒子模型" class="headerlink" title="CSS3盒子模型"></a>CSS3盒子模型</h2></li>
</ul>
<p>所有HTML元素可以看作盒子。CSS盒模型本质上是一个盒子，封装周围的HTML元素，包括：边距、边框、填充和实际内容。</p>
<h3 id="Margin：外边距-，清除边框外的区域，外边距是透明的。"><a href="#Margin：外边距-，清除边框外的区域，外边距是透明的。" class="headerlink" title="Margin：外边距 ，清除边框外的区域，外边距是透明的。"></a>Margin：外边距 ，清除边框外的区域，外边距是透明的。</h3><h3 id="Border：边框-，围绕在内边距和内容外的边框。"><a href="#Border：边框-，围绕在内边距和内容外的边框。" class="headerlink" title="Border：边框 ，围绕在内边距和内容外的边框。"></a>Border：边框 ，围绕在内边距和内容外的边框。</h3><h3 id="Padding：-内边距，清除内容周围的区域，内边距是透明的。"><a href="#Padding：-内边距，清除内容周围的区域，内边距是透明的。" class="headerlink" title="Padding： 内边距，清除内容周围的区域，内边距是透明的。"></a>Padding： 内边距，清除内容周围的区域，内边距是透明的。</h3><h3 id="Content：-盒子的内容，显示文本和图像。"><a href="#Content：-盒子的内容，显示文本和图像。" class="headerlink" title="Content： 盒子的内容，显示文本和图像。"></a>Content： 盒子的内容，显示文本和图像。</h3><p><font color="red">总元素的宽度 &#x3D; 宽度 + 左填充（padding） + 右填充 + 左边框 + 右边框 + 左边距 + 右边距</font>&gt;</p>
<p>两种盒模型的比较：</p>
<p>盒模型分为W3C的标准盒模型和IE盒模型。</p>
<p>标准盒模型的宽度就是content的宽度，高度是content的高度，而IE盒模型的宽度是content+padding+border的总和。</p>
<p>切换盒模型的方法：设置box-sizing属性。</p>
<p>box-sizing: content-box &#x2F;&#x2F;W3C盒子模型</p>
<p>box-sizing:border-box &#x2F;&#x2F;IE盒子模型</p>
<ul>
<li><h2 id="CSS3弹性盒子（Flex-Box）"><a href="#CSS3弹性盒子（Flex-Box）" class="headerlink" title="CSS3弹性盒子（Flex Box）"></a>CSS3弹性盒子（Flex Box）</h2></li>
<li><p>一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。</p>
<p>弹性盒子由弹性容器和弹性子元素组成。弹性容器通过设置display属性的值为flex或inline-flex（行内元素设置为Flex布局）将其定义为弹性容器。</p>
<p>注：设为了Flex布局以后，子元素的float、clear和virtical-align属性将失效。</p>
<p>弹性容器内包含一个或多个弹性子元素。</p>
<p>注意：弹性容器外及弹性子元素内是正常渲染的，弹性盒子只定义了弹性元素的如何在弹性容器内布局。弹性子元素通常在弹性盒子内一行显示，默认情况每个容器只有一行。修改排列方式：rtl(right to left)</p>
<p>body { direction: rtl; }</p>
<p>弹性容器上的属性共有6个：</p>
<p>flex-direction</p>
<p>flex-wrap</p>
<p>flex-flow</p>
<p>justify-content</p>
<p>align-items</p>
<p>align-content①flex-direcion：决定了主轴的方向（即弹性子元素在父容器中的排列方向）。</p>
<p>语法：flex-direction: row | row-reverse | column | column-reverse</p>
<p>row：横向从左到右排列。默认的排列方式。</p>
<p>row-reverse：反转横向排列（右对齐，从后往前排，最后一项排在最前面）</p>
<p>column：纵向排列。</p>
<p>column-reverse：反转纵向排列，从后往前排，最后一项排在最上面。</p>
<p>②flex-wrap：默认情况下，项目都排在一条线上，该属性定义如果一条轴线排不下，如何换行。</p>
<p>语法：flex-wrap: nowrap | wrap | wrap-reverse</p>
<p>③flex-flow：该属性是flex-direction属性和flex-wrap属性的简写形式，默认值是row nowrap。</p>
<p>④justify-content：定义了项目在主轴上的对齐方式，把弹性项沿着弹性容器的主轴线对齐。</p>
<p>语法：justify-content: flex-start | flex-end | center | space-between | space-around</p>
<p>flex-start：左对齐</p>
<p>flex-end：右对齐</p>
<p>center：居中</p>
<p>space-between：两端对齐，项目之间的间隔都是相等的</p>
<p>space-around：每个项目两侧的间隔相等，所以项目之间的间隔比项目与边框的间隔大一倍。</p>
<p>⑤align-items：定义项目在交叉轴上如何对齐。</p>
<p>语法：align-items: flex-start | flex-end | center | baseline | strench</p>
<p>baseline：项目的第一行文字的基线对齐</p>
<p>strench（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</p>
<p>⑥align-content：定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>
<p>语法：align-content: flex-start | flex-end | center | space-between | space-around | strench(默认值)</p>
<p>弹性子元素上的6个属性：</p>
<p>order</p>
<p>flex-grow</p>
<p>flex-shrink</p>
<p>flex-basis</p>
<p>flex</p>
<p>align-self</p>
<p>①order :定义弹性子元素的排列顺序。数值越小，排列越靠前，默认为0。</p>
<p>语法：order: <integer></p>
<p>②flex-grow:定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p>
<p>语法：flex-grow: <number></p>
<p>③flex-shrink:定义项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。负值对该属性无效。</p>
<p>语法：flex-shrink: <number></p>
<p>④flex-basis：定义了在分配多余空间之前，项目占据的主轴空间。默认值为auto</p>
<p>⑤flex属性是flex-grow、flex-shrink、flex-basis的简写，默认值是 0 1 auto。建议优先使用这个属性。该属性有两个快捷值： auto(1 1 auto) 和none(0 0 auto)。</p>
<p>⑥align-self：允许单个弹性子元素有与其他子元素不一样的对齐方式。可覆盖align-items属性，默认值为auto，表示继承弹性容器的align-items属性，如果没有父元素，则等同于strench。</p>
<ul>
<li><h2 id="CSS3多媒体查询"><a href="#CSS3多媒体查询" class="headerlink" title="CSS3多媒体查询"></a>CSS3多媒体查询</h2></li>
</ul>
<p>CSS中我们可以根据不同的媒体类型（包括显示器、便携设备、电视机等）来设置不同的样式规则。</p>
<p>可以设置分辨率来调节显示样式</p>
</li>
</ul>
]]></content>
      <categories>
        <category>CSS 3</category>
      </categories>
      <tags>
        <tag>CSS 3</tag>
      </tags>
  </entry>
</search>
